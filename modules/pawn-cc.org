#+TITLE:CC mode
#+OPTIONS: toc:2 num:nil ^:nil
* cclookup
cclookup
cpp 레퍼런스를 offline에서 확인할 수 있다.

#+BEGIN_SRC sh
git clone https://github.com/tsgates/cclookup ~/.emacs.d/cclookup
cd ~/.emacs.d/cclookup
sed -i 's/#! \/usr\/bin\/env python/#!\/usr\/bin\/env python2/' cclookup.py
#+END_SRC

#+BEGIN_SRC emacs-lisp
(setq cclookup-dir (expand-file-name "cclookup" user-emacs-directory))
(add-to-list 'load-path cclookup-dir)

(setq cclookup-program (concat cclookup-dir "/cclookup.py"))
(setq cclookup-db-file (concat cclookup-dir "/cclookup.db"))

(autoload 'cclookup-lookup "cclookup"
  "Lookup SEARCH-TERM in the Python HTML indexes." t)
(autoload 'cclookup-update "cclookup"
  "Run cclookup-update and create the database at `cclookup-db-file'." t)
#+END_SRC
* Basic Config
#+BEGIN_SRC emacs-lisp
(defun cc-mode-setup ()
  (setq c-default-style '((java-mode . "java")
                          (awk-mode . "awk")
                          (c-mode . "k&r")
                          (c++-mode . "stroustrup")
                          (other . "linux")))
  (setq c-basic-offset 4)
  (setq comment-style 'extra-line)
  (setq comment-start "/*")
  (setq comment-end "*/")
  (smartparens-mode))

(use-package cc-mode
  :defer t
  :init
  (add-hook 'c-mode-common-hook 'cc-mode-setup)
  :config
  (bind-keys :mode c-mode-base-map
             ("C-c k" . recompile)
             ("C-c C-k" . compile)
             ("C-c TAB" . hs-toggle-hiding)
             ("C-c S" . hs-show-all)
             ("C-c H" . hs-hide-all)
             :mode c++-mode-map
             ("C-c d h" . cclookup-lookup)))
#+END_SRC

#+BEGIN_SRC sh
pacman -S pkg-config
pacman -S clang
pacman -S cmake
#+END_SRC
* Google Test for C++
gtest는 함수 Test Framework이며, gmock를 추가해 객체도 Test가 가능하게 해준다.
#+BEGIN_SRC sh
pacman -S gtest
#+END_SRC
** Gtest Hello World
기본적인 내용은 [1]을 참고로 진행한다.
다만 아래의 파일은 다음과 같이 수정한다.
#+BEGIN_SRC sh
## GoogleTestExample/GoogleTestExample/CMakeLists.txt
#----------------------------------------------------
set(GTEST_ROOT /usr)
include_directories(
    ${GTEST_ROOT}/include
    )
add_executable(gtest_example gtest_example.cpp)
target_link_libraries(gtest_example
    pthread
    ${GTEST_ROOT}/lib/libgtest.so
    ${GTEST_ROOT}/lib/libgtest_main.so
    )
#+END_SRC
** Reference
[[http://stackoverflow.com/questions/65820/unit-testing-c-code][Stack overflow : Unit Testing C Code]]
[[http://www.joinc.co.kr/modules/moniwiki/wiki.php/Site/SoftWare_engineering/TDD][Joinc : C++ TDD]]
[[http://matome.naver.jp/odai/2138347407380937501][C언어 UnitTest 정리]]
[[http://gaobin.hatenablog.com/entry/2015/05/06/012007][Google TestでC言語のプログラムをテストする]]
[1] [[http://qiita.com/kuchida1981/items/9bb8fa4cc04635e7e909][Google Testの始め方]]
* Complete Header
[[https://github.com/randomphrase/company-c-headers][company-c-headers]]
[[https://github.com/mooz/auto-complete-c-headers][auto-complete-c-headers]]
* Documentation
~M-x man~
~M-x helm-man-woman~
* Reference
[[http://tuhdo.github.io/c-ide.html][C/C++ Development Environment for Emacs]]
[[http://futurismo.biz/archives/3071][Emacs で C/C++ の開発環境をめちゃガチャパワーアップしたまとめ]]
[[http://han9kin.tistory.com/m/post/28][Emacs에서 header file의 모드 자동 결정하기]]
[[http://seorenn.blogspot.kr/search/label/Emacs?updated-max=2011-03-25T10:40:00%2B09:00&max-results=20&start=120&by-date=false]]
